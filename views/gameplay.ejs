<!--gameplay.ejs-->

<!DOCTYPE html>
<html>
<head>
    <title>家福的游戲</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    
    <style>
        .row {
            margin-bottom: 10px; /* Khoảng cách giữa các hàng */
        }
    
        .col-1 {
            padding: 0 5px; /* Khoảng cách giữa các cột */
        }
    
        .btn {
            height: 50px; /* Chiều cao của nút */
        }
        #winningModal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 300px; /* Điều chỉnh theo nhu cầu */
            height: 400px; /* Điều chỉnh theo nhu cầu */
            background-color: green; /* Màu xanh lá */
            border: 2px solid black;
            border-radius: 10px; /* Bo tròn góc */
            text-align: center;
            padding: 20px;
            box-sizing: border-box;
            z-index: 1050; /* Giá trị cao để đảm bảo hiển thị trên cùng */
        }

        .modal-content {
            margin-top: 120px;
        }

        #okButton {
            background-color: white;
            margin-top: 50px; /* Tăng khoảng cách lên một chút */
            margin-bottom: 10px;
            border-radius: 4px
            
        }


    </style>
    <style>
        .player-info {
            font-size: 25px; /* Tăng kích thước chữ */
            margin-bottom: 5px; /* Thêm khoảng cách giữa các thông tin người chơi */
            /* Thêm bất kỳ quy tắc CSS khác bạn muốn tại đây */
        }
    
        .player-info span {
            margin-right: 10px; /* Thêm khoảng cách giữa tên và điểm số */
        }
    </style>
    <style>
        #countdown {
            position: absolute; /* Sử dụng positioning tuyệt đối */
            left: 50%; /* Đặt ở giữa theo chiều ngang */
            transform: translate(-50%, -50%); /* Căn giữa chính xác */
            /* Thêm các quy tắc CSS khác ở đây nếu cần */
        }
    </style>
    
    <script src="/socket.io/socket.io.js"></script>
    <script>
        // Khai báo biến để sử dụng trong toàn bộ scope của script
        var currentNumber = 0;
        var gameStarted = false;
        var playerID;
        var socket = io();
        var playerName = localStorage.getItem('playerName');

        if (playerName) {
            socket.emit('newPlayer', playerName);
        }

        

        // Hàm để cập nhật điểm số của người chơi trên UI
        function updatePlayerScores(players) {
            var playerListHTML = '';
            Object.values(players).forEach(function(player) {
                playerListHTML += '<div class="player-info"><span>' + player.name + '</span>    -   分數:<span>' + player.score + '</span></div>';
            });
            document.getElementById('playerList').innerHTML = playerListHTML;
        }
        function updateCurrentNumber(number) {
            var currentNumberElement = document.getElementById('currentNumber');
            if (currentNumberElement) {
                currentNumberElement.textContent = '目前數字: ' + number;
            }
        }
        

        document.addEventListener("DOMContentLoaded", function() {
            // Hàm bắt đầu trò chơi, kích hoạt nút số và cập nhật UI
            function startGame() {
                gameStarted = true;
                console.log('Game started, playerID:', playerID);
                document.getElementById('startButton').disabled = true;            
                socket.emit('gameStarted', gameStarted);
                            
            }
    
            // Hàm vô hiệu hóa tất cả nút số khi trò chơi chưa bắt đầu
            function disableNumberButtons() {
                var numberButtons = document.getElementsByClassName('number-button');
                console.log('Vô hiệu hóa tất cả nút số.');
                for (var i = 0; i < numberButtons.length; i++) {
                    numberButtons[i].disabled = true;
                }
            }
    
            // Hàm kích hoạt tất cả nút số khi trò chơi bắt đầu
            function enableNumberButtons() {
                var numberButtons = document.getElementsByClassName('number-button');
                console.log('Kích hoạt tất cả nút số.');
                for (var i = 0; i < numberButtons.length; i++) {
                    numberButtons[i].disabled = false;
                }
            }
    
            // Gắn sự kiện click cho nút Start
            document.getElementById('startButton').addEventListener('click', startGame);

            document.getElementById('okButton').addEventListener('click', function() {
            window.location.href = '/';
          });
    
            // Vô hiệu hóa nút số ban đầu
            disableNumberButtons();
    
            // Lắng nghe sự kiện được phát từ server khi có player mới hoặc cập nhật trạng thái game
            socket.on('playerID', function(id) {
                playerID = id;
                console.log('Player ID received:', playerID);
            });
    
            socket.on('updateGameState', function(data) {
                currentNumber = data.currentNumber;
                console.log('Game state updated:', data);
                updatePlayerScores(data.players);
                updateCurrentNumber(currentNumber);
            });
            socket.on('timeUpdate', function(timeLeft) {
                // Cập nhật giao diện người dùng với thời gian còn lại
                var countdownElement = document.getElementById('countdown');
                if (countdownElement) {
                    countdownElement.textContent = '游戲準備開始: ' + timeLeft;
                }
                
            });

            socket.on('startGame', function() {
                var countdownElement = document.getElementById('countdown');
                if (countdownElement) {
                    countdownElement.style.display = 'none';
                }

                enableNumberButtons(); 
            });
            socket.on('offStartBtn', function() {
                document.getElementById('startButton').disabled = true;  
            });
            socket.on('endGame', function(winnerData) {
                document.getElementById('winningMessage').textContent = `恭喜玩家 ${winnerData.name} 贏得了 ${winnerData.score} 分`;
                document.getElementById('winningModal').style.display = 'block';
            });
            socket.on('redirect', function(destination) {
                window.location.href = destination; // Chuyển hướng trình duyệt tới trang index.ejs
            });

    
            // Gắn sự kiện click cho mỗi nút số
            document.querySelectorAll('.number-button').forEach(function(button) {
                button.addEventListener('click', function() {
                    var numberClicked = parseInt(this.textContent);
                    console.log('Number clicked:', numberClicked, 'Player ID:', playerID);
    
                    // Kiểm tra số được nhấn có phải là số tiếp theo đúng đắn không
                    if (numberClicked === currentNumber + 1) {
                        fetch('/verify-number', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ number: numberClicked, playerID: playerID })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                console.log('Number verified and score updated:', data);
                                // Cập nhật UI ở đây nếu cần
                            } else {
                                console.log('Number is not the next consecutive number.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                    } else {
                        console.log('Number clicked is not the next in sequence.');
                    }
                });
            });
        });
    </script>
    
</head>
<body>
    <br/>
    <div class="container">
        <!-- Phần tử thông báo, ban đầu được ẩn -->
        <div id="winningModal" style="display: none;">
            <div class="modal-content">
                <p id="winningMessage">Chúc mừng người chơi xxx đã thắng với số điểm là xxx</p>
                <button id="okButton">OK</button>
            </div>
        </div>

        <div class="d-flex justify-content-center">
            <button id="startButton" class="btn btn-primary">開始</button>
        </div>
        
        <!-- Hiển Thị Số Hiện Tại -->
        <h3 id="currentNumber">目前數字: 0</h3>

        <!-- Các Nút Số -->
        <div class="row justify-content-center">
            <% numbers.forEach(function(number, index) { %>
                <% if (index % 10 === 0 && index !== 0) { %>
                    </div><div class="row justify-content-center">
                <% } %>
                <div class="col-1">
                    <button class="btn btn-outline-secondary w-100 h-100 number-button"><%= number %></button>
                </div>
            <% }); %>
        </div>
        <div id="countdown"></div>

        <!-- Danh Sách Người Chơi -->
        <h3>玩家名單</h3>
        <div id="playerList">
            <% players.forEach(function(player) { %>
                <div class="player-info">
                    <span><%= player.name %></span> - <span><%= player.score %></span>
                </div>
            <% }); %>
        </div>
        
    </div>

</body>

</html>